# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Contact page should display Feedback or Questions section
- Location: C:\Users\dahiyas\Automations\PlaywrightAutomation\tests\ContactPage.spec.js:4:1

# Error details

```
Error: expect(received).toBeTruthy()

Received: false
    at C:\Users\dahiyas\Automations\PlaywrightAutomation\tests\ContactPage.spec.js:34:23
```

# Test source

```ts
   1 | const { test, expect } = require('@playwright/test');
   2 | const { POManager } = require('../pageobjects/POManager');
   3 |
   4 | test('Contact page should display Feedback or Questions section', async ({ browser }) => {
   5 |     // Always use incognito context
   6 |     const context = await browser.newContext();
   7 |     const page = await context.newPage();
   8 |     const poManager = new POManager(page);
   9 |
  10 |     // 1. Navigate to login page
  11 |     await page.goto('https://accstorefront.ce0szhuj4u-siegwerkd1-s1-public.model-t.cc.commerce.ondemand.com/en/login');
  12 |
  13 |     // 2. Login
  14 |     await page.fill('input[name="j_username"]', 'adminuser0002232011@email.com');
  15 |     await page.fill('input[name="j_password"]', 'CustomerPO!21');
  16 |     await page.click('button[type="submit"]');
  17 |     await page.waitForLoadState('networkidle');
  18 |
  19 |     // 2.1 Wait for cookie dialog and accept only necessary cookies
  20 |     await page.locator('#CybotCookiebotDialogBodyButtonDecline').click();
  21 |     await page.locator('#CybotCookiebotDialog').waitFor({ state: 'hidden', timeout: 10000 });
  22 |     
  23 |
  24 |     // 3. Scroll to footer and click CONTACT link (force click in case of overlay)
  25 |     const contactLink = page.locator("a[href*='contact']");
  26 |     await contactLink.scrollIntoViewIfNeeded();
  27 |     await page.waitForTimeout(500); // Give time for UI to settle
  28 |     await contactLink.click({ force: true });
  29 |     await page.waitForLoadState('networkidle');
  30 |
  31 |     // 4. Verify CONTACT page is open and has Feedback or Questions section
  32 |     const contactPage = poManager.getContactPage();
  33 |     const isVisible = await contactPage.isContactPageOpen();
> 34 |     expect(isVisible).toBeTruthy();
     |                       ^ Error: expect(received).toBeTruthy()
  35 |
  36 |     await context.close();
  37 | });
  38 |
```